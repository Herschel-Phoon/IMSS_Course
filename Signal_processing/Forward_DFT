%% Code based on the code offered by(c) dsprelated.com

%% Example 1: FFT of a DFT-sinusoid
clear all;close all;clc
% Parameters:
N = 64;              % Must be a power of two
fs = 1;               % Set sampling rate to 1 Hz
A = 1;               % Sinusoidal amplitude
phi = 0;             % Sinusoidal phase
f = 0.25;            % Frequency (cycles/sample)
n = [0:N-1];         % Discrete time axis
x = A*cos(2*pi*n*f*fs+phi); % Sampled sinusoid
X = fft(x);          % Spectrum

% Plot time data:
figure(1);
subplot(3,1,1);
plot(n,x,'*k');
ni = [0:.1:N-1];     % Interpolated time axis
hold on;
plot(ni,A*cos(2*pi*ni*f*fs+phi),'-k'); grid off;
title('Sinusoid at 1/4 the Sampling Rate');
xlabel('Time (samples)');
ylabel('Amplitude');
text(-8,1,'a)');
hold off;

% Plot spectral magnitude:
magX = abs(X);
fn = [0:1/N:1-1/N];  % Normalized frequency axis
subplot(3,1,2);
stem(fn,magX,'ok'); grid on;
xlabel('Normalized Frequency (cycles per sample))');
ylabel('Magnitude (Linear)');
text(-.11,40,'b)');

% Same thing on a dB scale:
spec = 20*log10(magX); % Spectral magnitude in dB
subplot(3,1,3);
plot(fn,spec,'--ok'); grid on;
axis([0 1 -350 50]);
xlabel('Normalized Frequency (cycles per sample))');
ylabel('Magnitude (dB)');
text(-.11,50,'c)');
%% Example 2: FFT of a 2 sine signal
clear all;close all;clc
% Parameters:
N = 64;              % Must be a power of two
fs = 1;               % Set sampling rate to 1 Hz
A = 1;               % Sinusoidal amplitude
phi = 0;             % Sinusoidal phase
f1 = 0.25;            % Frequency (cycles/sample) on a DFT line
f2 = 0.1;            % Frequency (cycles/sample) between two DFT lines

n = [0:N-1];         % Discrete time axis
x = A*cos(2*pi*n*f1*fs+phi)+A*cos(2*pi*n*f2*fs+phi); % Sampled 2-sine wave
X = fft(x);          % Spectrum

% Plot time data:
figure(1);
subplot(2,1,1);
plot(n,x,'*k');
ni = [0:.1:N-1];     % Interpolated time axis
hold on;
plot(ni,A*cos(2*pi*ni*f1*fs+phi)+A*cos(2*pi*ni*f2*fs+phi),'-k'); grid off;
title('Sinusoid at 1/4 & 0.1 of the Sampling Rate');
xlabel('Time (samples)');
ylabel('Amplitude');
text(-8,1,'a)');
hold off;

% Plot spectral magnitude:
magX = abs(X);
fn = [0:1/N:1-1/N];  % Normalized frequency axis
subplot(2,1,2);
stem(fn,magX,'ok'); grid on;
xlabel('Normalized Frequency (cycles per sample)');
ylabel('Magnitude (Linear)');
text(-.11,40,'b)');
%% Example 3 - pseudorandom signal created by sines
% =========================================================================
clear; close all;clc;
N = 2000;                   % Number of samples
x = zeros(N,1);             % Memory allocation for vector x
Ts = 0.1;                   % Sampling period
Fs = 1/Ts;                  % Sampling frequency
t = 0:Ts:(N-1)*Ts;          % Time sequence
F = Fs*(0:N-1)/(N-1);       % Frequency grid
omega = 0.0:0.1:5;          % Sinus function frequencies
A = randn(length(omega),1); % Sinus function amplitudes

% p sinus waves of different amplitudes and frequencies added one by one to
% vector x
for p = 1:length(omega)     
    x = x + A(p)*sin(omega(p)*t*2*pi)';
    % Plot the time history and the corresponding FFT of x 
    if p<=5 || p == length(omega)
        figure(1)
        subplot(211),plot(t,x)
        xlabel('Time (s)')
        ylabel('x(t)')
        subplot(212),plot(F,abs(fft(x,N)))
        xlabel('Frequency (Hz)')
        ylabel('|F(\omega)|')
        pause
    end
end
